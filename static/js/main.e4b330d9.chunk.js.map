{"version":3,"sources":["Components/Navbar.js","Components/planet.js","Components/Planets.js","Components/Person.js","Components/People.js","App.js","index.js"],"names":["Navbar","setPage","onClick","Planet","planet","className","name","population","terrain","fetchPlanets","key","a","fetch","queryKey","res","json","Planets","useState","page","useQuery","data","status","results","map","Person","people","gender","birth_year","fetchPeople","People","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"4LAiBeA,EAfA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACI,gCACI,wBAAQC,QAAS,kBAAMD,EAAQ,WAA/B,oBACA,wBAAQC,QAAS,kBAAMD,EAAQ,UAA/B,wB,gCCMGE,MAVf,YAA6B,IAAXC,EAAU,EAAVA,OACd,OACI,sBAAKC,UAAU,OAAf,UACI,mCAAMD,EAAOE,KAAb,OACA,8CAAiBF,EAAOG,WAAxB,OACA,2CAAcH,EAAOI,eCH3BC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAGCC,MAAM,sCAAD,OAAuCF,EAAIG,SAAS,KAH1D,cAGXC,EAHW,yBAIVA,EAAIC,QAJM,2CAAH,sDAkCHC,MA3Bf,WAAoB,IAAD,EACUC,mBAAS,GADnB,mBACRC,EADQ,KACDjB,EADC,OAEUkB,YAAS,CAAC,UAAUD,GAAOT,GAA5CW,EAFO,EAEPA,KAAMC,EAFC,EAEDA,OAEd,OACI,gCACI,yCAEJ,wBAAQnB,QAAS,kBAAMD,EAAQ,IAA/B,oBACA,wBAAQC,QAAS,kBAAMD,EAAQ,IAA/B,oBACA,wBAAQC,QAAS,kBAAMD,EAAQ,IAA/B,oBAEiB,YAAXoB,GACE,qBAAKhB,UAAU,OAAf,gDAES,UAAXgB,GACE,qBAAKhB,UAAU,OAAf,iCAES,YAAXgB,GACE,8BACMD,EAAKE,QAAQC,KAAI,SAAAnB,GAAM,OAAI,cAAC,EAAD,CAA0BA,OAAQA,GAArBA,EAAOE,eCnBtDkB,MAVf,YAA6B,IAAXC,EAAU,EAAVA,OACd,OACI,sBAAKpB,UAAU,OAAf,UACI,mCAAMoB,EAAOnB,KAAb,OACA,0CAAamB,EAAOC,OAApB,OACA,8CAAiBD,EAAOE,kBCF9BC,EAAW,uCAAG,WAAOlB,GAAP,eAAAC,EAAA,sEACEC,MAAM,sCAAD,OAAuCF,EAAIG,SAAS,KAD3D,cACVC,EADU,yBAETA,EAAIC,QAFK,2CAAH,sDA8BFc,MAzBf,WAAmB,IAAD,EACUZ,mBAAS,GADnB,mBACPC,EADO,KACDjB,EADC,OAEWkB,YAAS,CAAC,SAAUD,GAAOU,GAA5CR,EAFM,EAENA,KAAMC,EAFA,EAEAA,OAEd,OACI,gCACI,wCACA,wBAAQnB,QAAS,kBAAMD,EAAQ,IAA/B,oBACA,wBAAQC,QAAS,kBAAMD,EAAQ,IAA/B,oBACA,wBAAQC,QAAS,kBAAMD,EAAQ,IAA/B,oBACa,YAAXoB,GACE,qBAAKhB,UAAU,OAAf,gDAES,UAAXgB,GACE,qBAAKhB,UAAU,OAAf,iCAES,YAAXgB,GACE,8BACMD,EAAKE,QAAQC,KAAI,SAAAE,GAAM,OAAI,cAAC,EAAD,CAA0BA,OAAQA,GAArBA,EAAOnB,e,QCLtDwB,MAjBf,WAAgB,IAAD,EACSb,mBAAS,UADlB,mBACRC,EADQ,KACFjB,EADE,KAGb,OACE,qCACE,sBAAKI,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,4BACA,cAAC,EAAD,CAAQJ,QAASA,IACjB,qBAAKI,UAAU,UAAf,SACY,WAATa,EAAoB,cAAC,EAAD,IAAa,cAAC,EAAD,SAGtC,cAAC,qBAAD,CAAoBa,eAAe,Q,gBCZnCC,EAAc,IAAIC,IAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAqBC,OAAQN,EAA7B,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.e4b330d9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = ({ setPage }) => {\r\n    return (\r\n        <nav>\r\n            <button onClick={() => setPage('planet')} >Planet</button>\r\n            <button onClick={() => setPage('chars')} >People</button>\r\n            {/* <div className=\"tab active\">\r\n                <a href=\"#\" onClick={() => setPage('planet')}>Planets</a>\r\n            </div>\r\n            <div className=\"tab\">\r\n                <a href=\"#\" onClick={() => setPage('char')}>People</a>\r\n            </div> */}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction Planet({ planet }) {\r\n    return (\r\n        <div className=\"card\">\r\n            <h2> {planet.name} </h2>\r\n            <p>Population : {planet.population} </p>\r\n            <p>Terrain : {planet.terrain}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Planet;","import React, { useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport Planet from './planet'\r\n\r\nconst fetchPlanets = async (key) => {\r\n    // console.log(key.queryKey[1])\r\n    // const res = await fetch(`http://swapi.dev/api/planets/`)\r\n    const res = await fetch(`http://swapi.dev/api/planets/?page=${key.queryKey[1]}`)\r\n    return res.json();\r\n}\r\n\r\nfunction Planets() {\r\n    const [page , setPage] = useState(1);\r\n    const { data, status } = useQuery(['planets',page], fetchPlanets);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Planets</h1>\r\n\r\n        <button onClick={() => setPage(1)}>Page 1</button>\r\n        <button onClick={() => setPage(2)}>Page 2</button>\r\n        <button onClick={() => setPage(3)}>Page 3</button>\r\n\r\n            { status === \"loading\" && (\r\n                <div className=\"card\">Data is loading please wait . . . </div>\r\n            )}\r\n            { status === \"error\" && (\r\n                <div className=\"card\">Error fetching Data</div>\r\n            )}\r\n            { status === \"success\" && (\r\n                <div>\r\n                    { data.results.map(planet => <Planet key={planet.name} planet={planet} />)}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Planets;","import React from 'react';\r\n\r\nfunction Person({ people }) {\r\n    return (\r\n        <div className=\"card\">\r\n            <h2> {people.name} </h2>\r\n            <p>Gender : {people.gender} </p>\r\n            <p>Birth Year : {people.birth_year}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Person;","import React, { useState } from 'react';\r\nimport { useQuery,  } from 'react-query';\r\nimport Person from './Person'\r\n\r\n\r\nconst fetchPeople = async (key) => {\r\n    const res = await fetch(`https://swapi.dev/api/people/?page=${key.queryKey[1]}`)\r\n    return res.json();\r\n}\r\n\r\nfunction People() {\r\n    const [page, setPage] = useState(1);\r\n    const { data, status } = useQuery(['People', page], fetchPeople)\r\n\r\n    return (\r\n        <div>\r\n            <h1>People</h1>\r\n            <button onClick={() => setPage(1)}>Page 1</button>\r\n            <button onClick={() => setPage(2)}>Page 2</button>\r\n            <button onClick={() => setPage(3)}>Page 3</button>\r\n            { status === \"loading\" && (\r\n                <div className=\"card\">Data is loading please wait . . . </div>\r\n            )}\r\n            { status === \"error\" && (\r\n                <div className=\"card\">Error fetching Data</div>\r\n            )}\r\n            { status === \"success\" && (\r\n                <div>\r\n                    { data.results.map(people => <Person key={people.name} people={people} />)}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default People;","import React, { useState } from 'react';\nimport Navbar from './Components/Navbar';\nimport Planet from './Components/Planets';\nimport People from './Components/People';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nfunction App() {\n  let [page, setPage] = useState('planet')\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1 className=\"Heading\">Star Wars Info</h1>\n        <Navbar setPage={setPage} />\n        <div className=\"content\">\n          {page === 'planet' ? <Planet /> : <People />}\n        </div>\n      </div>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}